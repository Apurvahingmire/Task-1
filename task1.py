# -*- coding: utf-8 -*-
"""task1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L1t8_5SvaYVLI7YLphV3zQg2w0L2UNt4

<p>
<font style="times new roman">NAME: Apurva Charankumar Hingmire <br>

TSF Internship Data Science and Business Analytics <br>

<b>TASK 1(beginner): Prediction using supervised ML-</b> Predict the percentage of a student based on the no. of study hours, and predicting the score if a student studies 9.25 hours per day. <br><br>
Language: Python <br>
IDE: Google colab
</font>
<p>
<hr>

<p>
<font size="4"><b>Step1:  Importing required libraries</b></font>
</p>
"""

import array as np  
import pandas as pd
import seaborn as sns  
import matplotlib.pyplot as plt

#loading the dataset
url= "http://bit.ly/w-data"
data=pd.read_csv(url)
print("Data imported sucessfully ")

data.head(12)

data.describe()

data.isnull().sum()

"""<p>
<font size="4"><b>Step2:  Visualising Dataset</b></font></p>
"""

#plotting the distribution of scores
data.plot(x="Hours", y="Scores", style="o")
plt.title("No.of Hours studied vs scores")
plt.xlabel("No. of Hours studied ")
plt.ylabel("Scores")
plt.show()

"""<P>
<font size="4"><b> Step3: Preparing the Dataset</b>
</font></p>
"""

# Dividing the data into"attributes"(inputs) and "labels"(output)
x=data.iloc[:,:-1].values
y=data.iloc[:,1].values

#splitting the data into training and test sets
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=0)

"""<p>
<font size="4"><b>Step4: training the Algorithm
"""

from sklearn.linear_model import LinearRegression
regr = LinearRegression()
regr.fit(x_train,y_train)
print("Training completed successfully")

#Plotting theregression line
line=regr.coef_*x+regr.intercept_
plt.scatter(x,y)
plt.plot(x,line)
plt.show()

"""<p>
<font size="4"><b> Step5: Making Predictions</b></font></p>
"""

print(x_test)

#Predicting the scores
y_predicted=regr.predict(x_test)
print(regr.predict(x_test))

d=[x_test,y_test,y_predicted]
d

"""<p>
<font size="4"><b> Step6: Comparing Actual and Predicted scores
"""

df=pd.DataFrame({"Actual value":y_test,"Predicted value":y_predicted})
df

#Predicting score if astudent studies for 9.25 hours/day
Study_hours= 9.25
predicted_score= regr.predict([[Study_hours]])
print("Number of Hours= {}" .format(Study_hours))
print("Number of Scores= {}". format(predicted_score[0]))

print("if a student studies for 9.25 hours/day, his score would be", predicted_score)

"""<p>
<font size="4"><b> Step7: Evaluating the Model"</b></font>
"""

from sklearn import metrics
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test,y_predicted))